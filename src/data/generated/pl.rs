use crate::data::layout::*;
use std::borrow::Cow;

pub const RESOURCE: Resource<'static> = Resource {
    main: MainResource {
        pl: LocaleResource {
            dates: CalendarDates {
                calendars: Calendar {
                    gregorian: GregorianCalendar {
                        months: Months {
                            format: MonthTypes {
                                abbreviated: Some(MonthList {
                                    m1: Cow::Borrowed("sty"),
                                    m2: Cow::Borrowed("lut"),
                                    m3: Cow::Borrowed("mar"),
                                    m4: Cow::Borrowed("kwi"),
                                    m5: Cow::Borrowed("maj"),
                                    m6: Cow::Borrowed("cze"),
                                    m7: Cow::Borrowed("lip"),
                                    m8: Cow::Borrowed("sie"),
                                    m9: Cow::Borrowed("wrz"),
                                    m10: Cow::Borrowed("paź"),
                                    m11: Cow::Borrowed("lis"),
                                    m12: Cow::Borrowed("gru"),
                                }),
                                narrow: Some(MonthList {
                                    m1: Cow::Borrowed("s"),
                                    m2: Cow::Borrowed("l"),
                                    m3: Cow::Borrowed("m"),
                                    m4: Cow::Borrowed("k"),
                                    m5: Cow::Borrowed("m"),
                                    m6: Cow::Borrowed("c"),
                                    m7: Cow::Borrowed("l"),
                                    m8: Cow::Borrowed("s"),
                                    m9: Cow::Borrowed("w"),
                                    m10: Cow::Borrowed("p"),
                                    m11: Cow::Borrowed("l"),
                                    m12: Cow::Borrowed("g"),
                                }),
                                short: None,
                                wide: Some(MonthList {
                                    m1: Cow::Borrowed("stycznia"),
                                    m2: Cow::Borrowed("lutego"),
                                    m3: Cow::Borrowed("marca"),
                                    m4: Cow::Borrowed("kwietnia"),
                                    m5: Cow::Borrowed("maja"),
                                    m6: Cow::Borrowed("czerwca"),
                                    m7: Cow::Borrowed("lipca"),
                                    m8: Cow::Borrowed("sierpnia"),
                                    m9: Cow::Borrowed("września"),
                                    m10: Cow::Borrowed("października"),
                                    m11: Cow::Borrowed("listopada"),
                                    m12: Cow::Borrowed("grudnia"),
                                }),
                            },
                            stand_alone: MonthTypes {
                                abbreviated: Some(MonthList {
                                    m1: Cow::Borrowed("sty"),
                                    m2: Cow::Borrowed("lut"),
                                    m3: Cow::Borrowed("mar"),
                                    m4: Cow::Borrowed("kwi"),
                                    m5: Cow::Borrowed("maj"),
                                    m6: Cow::Borrowed("cze"),
                                    m7: Cow::Borrowed("lip"),
                                    m8: Cow::Borrowed("sie"),
                                    m9: Cow::Borrowed("wrz"),
                                    m10: Cow::Borrowed("paź"),
                                    m11: Cow::Borrowed("lis"),
                                    m12: Cow::Borrowed("gru"),
                                }),
                                narrow: Some(MonthList {
                                    m1: Cow::Borrowed("S"),
                                    m2: Cow::Borrowed("L"),
                                    m3: Cow::Borrowed("M"),
                                    m4: Cow::Borrowed("K"),
                                    m5: Cow::Borrowed("M"),
                                    m6: Cow::Borrowed("C"),
                                    m7: Cow::Borrowed("L"),
                                    m8: Cow::Borrowed("S"),
                                    m9: Cow::Borrowed("W"),
                                    m10: Cow::Borrowed("P"),
                                    m11: Cow::Borrowed("L"),
                                    m12: Cow::Borrowed("G"),
                                }),
                                short: None,
                                wide: Some(MonthList {
                                    m1: Cow::Borrowed("styczeń"),
                                    m2: Cow::Borrowed("luty"),
                                    m3: Cow::Borrowed("marzec"),
                                    m4: Cow::Borrowed("kwiecień"),
                                    m5: Cow::Borrowed("maj"),
                                    m6: Cow::Borrowed("czerwiec"),
                                    m7: Cow::Borrowed("lipiec"),
                                    m8: Cow::Borrowed("sierpień"),
                                    m9: Cow::Borrowed("wrzesień"),
                                    m10: Cow::Borrowed("październik"),
                                    m11: Cow::Borrowed("listopad"),
                                    m12: Cow::Borrowed("grudzień"),
                                }),
                            },
                        },
                        days: Days {
                            format: DayTypes {
                                abbreviated: Some(DayList {
                                    sun: Cow::Borrowed("niedz."),
                                    mon: Cow::Borrowed("pon."),
                                    tue: Cow::Borrowed("wt."),
                                    wed: Cow::Borrowed("śr."),
                                    thu: Cow::Borrowed("czw."),
                                    fri: Cow::Borrowed("pt."),
                                    sat: Cow::Borrowed("sob."),
                                }),
                                narrow: Some(DayList {
                                    sun: Cow::Borrowed("n"),
                                    mon: Cow::Borrowed("p"),
                                    tue: Cow::Borrowed("w"),
                                    wed: Cow::Borrowed("ś"),
                                    thu: Cow::Borrowed("c"),
                                    fri: Cow::Borrowed("p"),
                                    sat: Cow::Borrowed("s"),
                                }),
                                short: Some(DayList {
                                    sun: Cow::Borrowed("nie"),
                                    mon: Cow::Borrowed("pon"),
                                    tue: Cow::Borrowed("wto"),
                                    wed: Cow::Borrowed("śro"),
                                    thu: Cow::Borrowed("czw"),
                                    fri: Cow::Borrowed("pią"),
                                    sat: Cow::Borrowed("sob"),
                                }),
                                wide: Some(DayList {
                                    sun: Cow::Borrowed("niedziela"),
                                    mon: Cow::Borrowed("poniedziałek"),
                                    tue: Cow::Borrowed("wtorek"),
                                    wed: Cow::Borrowed("środa"),
                                    thu: Cow::Borrowed("czwartek"),
                                    fri: Cow::Borrowed("piątek"),
                                    sat: Cow::Borrowed("sobota"),
                                }),
                            },
                            stand_alone: DayTypes {
                                abbreviated: Some(DayList {
                                    sun: Cow::Borrowed("niedz."),
                                    mon: Cow::Borrowed("pon."),
                                    tue: Cow::Borrowed("wt."),
                                    wed: Cow::Borrowed("śr."),
                                    thu: Cow::Borrowed("czw."),
                                    fri: Cow::Borrowed("pt."),
                                    sat: Cow::Borrowed("sob."),
                                }),
                                narrow: Some(DayList {
                                    sun: Cow::Borrowed("N"),
                                    mon: Cow::Borrowed("P"),
                                    tue: Cow::Borrowed("W"),
                                    wed: Cow::Borrowed("Ś"),
                                    thu: Cow::Borrowed("C"),
                                    fri: Cow::Borrowed("P"),
                                    sat: Cow::Borrowed("S"),
                                }),
                                short: Some(DayList {
                                    sun: Cow::Borrowed("nie"),
                                    mon: Cow::Borrowed("pon"),
                                    tue: Cow::Borrowed("wto"),
                                    wed: Cow::Borrowed("śro"),
                                    thu: Cow::Borrowed("czw"),
                                    fri: Cow::Borrowed("pią"),
                                    sat: Cow::Borrowed("sob"),
                                }),
                                wide: Some(DayList {
                                    sun: Cow::Borrowed("niedziela"),
                                    mon: Cow::Borrowed("poniedziałek"),
                                    tue: Cow::Borrowed("wtorek"),
                                    wed: Cow::Borrowed("środa"),
                                    thu: Cow::Borrowed("czwartek"),
                                    fri: Cow::Borrowed("piątek"),
                                    sat: Cow::Borrowed("sobota"),
                                }),
                            },
                        },
                        date_formats: Formats {
                            full: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::WeekDayWide),
                                PatternElement::Literal(Cow::Borrowed(", ")),
                                PatternElement::Token(DateTimeToken::DayNumeric),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::MonthNameLong),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::YearNumeric),
                            ]))),
                            long: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::DayNumeric),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::MonthNameLong),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::YearNumeric),
                            ]))),
                            medium: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::DayNumeric),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::MonthNameAbbreviated),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::YearNumeric),
                            ]))),
                            short: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Day2digit),
                                PatternElement::Literal(Cow::Borrowed(".")),
                                PatternElement::Token(DateTimeToken::Month2digit),
                                PatternElement::Literal(Cow::Borrowed(".")),
                                PatternElement::Token(DateTimeToken::YearNumeric),
                            ]))),
                        },
                        time_formats: Formats {
                            full: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Hour2digit),
                                PatternElement::Literal(Cow::Borrowed(":")),
                                PatternElement::Token(DateTimeToken::Minute2digit),
                                PatternElement::Literal(Cow::Borrowed(":")),
                                PatternElement::Token(DateTimeToken::Second2digit),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::ZoneLong),
                            ]))),
                            long: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Hour2digit),
                                PatternElement::Literal(Cow::Borrowed(":")),
                                PatternElement::Token(DateTimeToken::Minute2digit),
                                PatternElement::Literal(Cow::Borrowed(":")),
                                PatternElement::Token(DateTimeToken::Second2digit),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::ZoneShort),
                            ]))),
                            medium: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Hour2digit),
                                PatternElement::Literal(Cow::Borrowed(":")),
                                PatternElement::Token(DateTimeToken::Minute2digit),
                                PatternElement::Literal(Cow::Borrowed(":")),
                                PatternElement::Token(DateTimeToken::Second2digit),
                            ]))),
                            short: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Hour2digit),
                                PatternElement::Literal(Cow::Borrowed(":")),
                                PatternElement::Token(DateTimeToken::Minute2digit),
                            ]))),
                        },
                        date_time_formats: Formats {
                            full: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Sub1),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::Sub0),
                            ]))),
                            long: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Sub1),
                                PatternElement::Literal(Cow::Borrowed(" ")),
                                PatternElement::Token(DateTimeToken::Sub0),
                            ]))),
                            medium: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Sub1),
                                PatternElement::Literal(Cow::Borrowed(", ")),
                                PatternElement::Token(DateTimeToken::Sub0),
                            ]))),
                            short: Some(DateTimePattern::Parsed(Cow::Borrowed(&[
                                PatternElement::Token(DateTimeToken::Sub1),
                                PatternElement::Literal(Cow::Borrowed(", ")),
                                PatternElement::Token(DateTimeToken::Sub0),
                            ]))),
                        },
                    },
                },
            },
        },
    },
};
